{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Opossum Search Documentation","text":"<p>Welcome to the Opossum Search documentation. This site provides detailed information about the system's architecture, features, and operational guidelines.</p>"},{"location":"#service-availability","title":"Service Availability","text":"<p>The service availability documentation describes how the system ensures continuous operation through monitoring, failover mechanisms, and service recovery procedures.</p> <ul> <li>Context and Scope</li> <li>Quality Requirements</li> <li>Architecture Constraints</li> <li>Availability Monitoring</li> <li>Error Handling</li> <li>Rate Limiting</li> <li>Logging and Alerts</li> <li>Fallback Mechanisms</li> <li>Testing and Validation</li> <li>Diagrams</li> </ul>"},{"location":"service-availability/architecture-constraints/","title":"3. Architecture Constraints","text":""},{"location":"service-availability/architecture-constraints/#31-external-service-dependencies","title":"3.1 External Service Dependencies","text":"Service Dependency Type Constraint Impact Gemini API Hard dependency for primary path Requires valid API key and network connectivity Service unavailability triggers failover to Ollama Google Cloud Platform Infrastructure for Gemini Subject to Google's maintenance windows and SLAs May cause temporary Gemini unavailability OpenAI API Optional fallback service Rate-limited based on subscription tier Provides additional redundancy if configured"},{"location":"service-availability/architecture-constraints/#32-local-service-dependencies","title":"3.2 Local Service Dependencies","text":"Service Constraint Impact Ollama Requires local GPU for optimal performance Performance degradation on CPU-only systems Transformers Requires sufficient RAM for model loading Lower capability models used when RAM is limited Python Runtime Version 3.8+ required Application will not start on older Python versions"},{"location":"service-availability/architecture-constraints/#33-infrastructure-requirements","title":"3.3 Infrastructure Requirements","text":"Component Requirement Rationale CPU 4+ cores recommended Needed for concurrent service checks and model inference RAM Minimum 8GB, 16GB recommended Required for local model loading and operation Storage 10GB minimum for application and models Local models require significant storage space Network Reliable internet connection for external APIs Intermittent connectivity will affect Gemini service Docker Optional but recommended for Ollama isolation Simplifies deployment and management of Ollama service"},{"location":"service-availability/architecture-constraints/#34-operating-environment-constraints","title":"3.4 Operating Environment Constraints","text":"Constraint Description Mitigation Firewall Restrictions Corporate firewalls may block API calls to Google Configure proxy settings or use local services only Rate Limits Gemini API has strict rate limits Implement request queueing and smart routing Offline Operation Must function with degraded capabilities when offline Ensure Transformers models are pre-downloaded Cross-Platform Support Must run on Windows, macOS, and Linux Abstract platform-specific code and test on all platforms"},{"location":"service-availability/architecture-constraints/#35-technical-debt-and-limitations","title":"3.5 Technical Debt and Limitations","text":"Limitation Description Future Improvement Manual Failover Recovery System does not automatically recover preferred services Implement automatic service recovery detection Limited API Compatibility Different model providers have different APIs Create abstraction layer to normalize responses Fixed Check Interval Service checks occur at fixed intervals Implement adaptive check intervals based on service stability Missing Health Metrics Only binary up/down status tracked Add response time and error rate tracking Circuit Breaker Patterns Basic implementation of failure detection Implement comprehensive circuit breaker patterns"},{"location":"service-availability/availability-monitoring/","title":"4. Availability Monitoring","text":""},{"location":"service-availability/availability-monitoring/#41-monitoring-strategy","title":"4.1 Monitoring Strategy","text":"Component Strategy Implementation Service Availability Active polling Asynchronous health checks to all services Rate Limit Tracking Counter-based In-memory tracking with time-based resets Status Changes Event-based Status change detection and logging Failure Detection Exception handling Request timeouts and error catching"},{"location":"service-availability/availability-monitoring/#42-check-frequency-and-scheduling","title":"4.2 Check Frequency and Scheduling","text":"Service Check Frequency Caching Duration Trigger Mechanism Gemini API Every 30 seconds (max) 30 seconds On-demand with caching Ollama Every 30 seconds (max) 30 seconds On-demand with caching Transformers Every 30 seconds (max) 30 seconds On-demand with caching All Services On application startup N/A Initialization check"},{"location":"service-availability/availability-monitoring/#43-metrics-collection","title":"4.3 Metrics Collection","text":"Metric Collection Method Storage Purpose Service Status Boolean availability flag In-memory dictionary Service selection Last Check Timestamp Datetime object In-memory dictionary Throttling checks Gemini Daily Usage Counter with daily reset In-memory counter Rate limit compliance Gemini Per-Minute Usage Counter with minute reset In-memory counter Rate limit compliance Service Transitions Event logging Application logs Diagnostics and reporting"},{"location":"service-availability/availability-monitoring/#44-monitoring-tools","title":"4.4 Monitoring Tools","text":"Tool Purpose Integration Standard Logging Record availability events and transitions Python logging module Health Check API Internal HTTP endpoint for status monitoring Flask route handler Exception Tracking Capture and report service check failures Try-except blocks with logging Status Dashboard Visual representation of service availability Admin interface (planned)"},{"location":"service-availability/availability-monitoring/#45-implementation-details","title":"4.5 Implementation Details","text":"<p>The monitoring system uses concurrent asynchronous checks to efficiently assess service availability:</p> <pre><code>class ServiceAvailability:\n    def __init__(self):\n        self.services_status = {\n            \"gemini\": {\"available\": False, \"last_checked\": None},\n            \"ollama\": {\"available\": False, \"last_checked\": None},\n            \"transformers\": {\"available\": False, \"last_checked\": None}\n        }\n        self.check_interval = 30  # seconds\n\n    async def check_all_services(self):\n        \"\"\"Check availability of all configured services\"\"\"\n        logger.debug(\"Beginning availability check for all services\")\n\n        # Run all checks concurrently\n        await asyncio.gather(\n            self.check_ollama_availability(),\n            self.check_gemini_availability(),\n            self.check_transformers_availability()\n        )\n\n    async def check_gemini_availability(self):\n        \"\"\"Check if Gemini API is available\"\"\"\n        try:\n            # Implement a lightweight request to Gemini API\n            # Record result in services_status dictionary\n            current_time = datetime.now()\n            if self.services_status[\"gemini\"][\"last_checked\"] is None or \\\n               (current_time - self.services_status[\"gemini\"][\"last_checked\"]).seconds &gt; self.check_interval:\n                # Perform actual check here\n                self.services_status[\"gemini\"][\"available\"] = True  # Set based on check result\n                self.services_status[\"gemini\"][\"last_checked\"] = current_time\n                logger.info(\"Gemini API is available\")\n        except Exception as e:\n            self.services_status[\"gemini\"][\"available\"] = False\n            self.services_status[\"gemini\"][\"last_checked\"] = datetime.now()\n            logger.error(f\"Gemini API check failed: {str(e)}\")\n\n    # Similar methods for check_ollama_availability and check_transformers_availability\n</code></pre>"},{"location":"service-availability/availability-monitoring/#46-availability-reporting","title":"4.6 Availability Reporting","text":"Report Frequency Contents Distribution Status Change Alerts Real-time Service, previous status, new status, reason Logs Availability Summary Daily Uptime percentages, outage periods, failover counts Logs, email (planned) Rate Limit Reports Daily API usage statistics, remaining quota Logs Service Health Check On-demand Current status of all services API endpoint (planned)"},{"location":"service-availability/context-and-scope/","title":"1. Context and Scope","text":""},{"location":"service-availability/context-and-scope/#11-overview","title":"1.1 Overview","text":"<p>This document describes the service availability monitoring system implemented for the Opossum Search application. The system monitors the availability of multiple AI model backends, manages rate limits, and provides automatic failover to ensure continuous operation.</p>"},{"location":"service-availability/context-and-scope/#12-services-in-scope","title":"1.2 Services in Scope","text":"<p>The following services are monitored for availability:</p> Service Type Purpose Availability Mechanism Gemini External API High-capability AI models with API-based access API key validation and rate limit monitoring Ollama Local service Self-hosted AI models with REST API Connection health checking Transformers Local library Fallback for offline operation Always assumed available (local)"},{"location":"service-availability/context-and-scope/#13-critical-paths","title":"1.3 Critical Paths","text":"<p>The application depends on at least one service being available to respond to user queries. The dependency chain is:</p> <ol> <li>Primary Path: Gemini API (when available and suitable for query type)</li> <li>Secondary Path: Ollama service (when available and suitable for query type)</li> <li>Fallback Path: Transformers models (always available, used when other services fail)</li> </ol>"},{"location":"service-availability/context-and-scope/#14-system-boundaries","title":"1.4 System Boundaries","text":"<p>The availability system:</p> <ul> <li>Monitors: All AI model service endpoints</li> <li>Records: Usage statistics for rate-limited services</li> <li>Logs: Service status changes and availability events</li> <li>Does Not: Handle network configuration or service deployment</li> </ul>"},{"location":"service-availability/context-and-scope/#15-stakeholders","title":"1.5 Stakeholders","text":"Stakeholder Interest in Service Availability End Users Uninterrupted access to AI functionality Operations Team Monitoring service health and diagnostics Developers Understanding fallback behavior and service dependencies"},{"location":"service-availability/context-and-scope/#16-external-interfaces","title":"1.6 External Interfaces","text":"<ul> <li>Gemini API: Google Cloud API with rate limits and authentication</li> <li>Ollama REST API: Local service providing model inference</li> <li>Transformers Library: Local Python library for model inference</li> </ul>"},{"location":"service-availability/context-and-scope/#17-technical-context","title":"1.7 Technical Context","text":"<p>The service availability system is implemented as a component in the model backend selection process. It:</p> <ol> <li>Performs regular health checks (maximum once per 30 seconds per service)</li> <li>Runs checks concurrently to minimize impact on performance</li> <li>Influences model selection based on real-time availability</li> <li>Provides status information for logging and diagnostics</li> </ol>"},{"location":"service-availability/fallback-mechanisms/","title":"8. Fallback Mechanisms","text":""},{"location":"service-availability/fallback-mechanisms/#81-fallback-hierarchy","title":"8.1 Fallback Hierarchy","text":"Priority Service Type Capabilities Limitations 1 (Primary) Gemini API External API Full model capabilities, high intelligence Rate limited, requires internet 2 (Secondary) Ollama Local service Good capabilities, custom models Requires GPU for performance, local deployment 3 (Tertiary) Transformers Local library Basic capabilities, offline operation Higher latency, limited model size 4 (Emergency) Client-side JavaScript Basic scripted responses Very limited capabilities, no real AI"},{"location":"service-availability/fallback-mechanisms/#82-activation-conditions","title":"8.2 Activation Conditions","text":"Fallback Path Activation Conditions Detection Method Gemini \u2192 Ollama API unavailable, rate limit exceeded, authentication failure HTTP errors (429, 401, 403, 5xx), timeout Ollama \u2192 Transformers Connection failure, resource exhaustion Socket errors, initialization failure Server \u2192 Client All server services unavailable, network failure Multiple failed API requests Any \u2192 Preferred Service Previously unavailable service now available Periodic health checks"},{"location":"service-availability/fallback-mechanisms/#83-fallback-implementation","title":"8.3 Fallback Implementation","text":"<pre><code>class ServiceRouter:\n    def __init__(self, availability_manager):\n        self.availability_manager = availability_manager\n\n    async def route_request(self, user_request):\n        \"\"\"Route request to best available service\"\"\"\n        services = await self.availability_manager.get_available_services()\n\n        if \"gemini\" in services and not self.will_exceed_rate_limit(user_request):\n            return await self.process_with_gemini(user_request)\n        elif \"ollama\" in services:\n            return await self.process_with_ollama(user_request)\n        elif \"transformers\" in services:\n            return await self.process_with_transformers(user_request)\n        else:\n            return {\n                \"response\": \"Sorry, no AI services are currently available.\",\n                \"fallback_used\": \"none\",\n                \"service_status\": \"unavailable\"\n            }\n</code></pre>"},{"location":"service-availability/fallback-mechanisms/#84-client-side-fallback","title":"8.4 Client-Side Fallback","text":"<p>The frontend implements a JavaScript-based fallback that simulates basic responses when server services are unavailable:</p> <pre><code>// Excerpt from client-side fallback\nfunction getBotResponse(userMessage) { // Fallback simulation function\n    userMessage = userMessage.toLowerCase().trim();\n    let botMessage = \"\";\n\n    switch (conversationStage) {\n        case \"greeting\":\n            if (userMessage.includes(\"hi\") || userMessage.includes(\"hello\")) {\n                botMessage = \"Greetings! I am your Opossum Information Assistant. How can I help you?\";\n                conversationStage = \"initial_query\";\n            } else {\n                botMessage = \"Sorry, I didn't catch that. Perhaps start with a friendly 'Hello'?\";\n            }\n            break;\n\n        // Additional conversation stages and responses...\n\n        default:\n            botMessage = \"I'm in simulation mode. Please ask something about opossums.\";\n    }\n    return botMessage;\n}\n</code></pre>"},{"location":"service-availability/fallback-mechanisms/#85-capability-degradation","title":"8.5 Capability Degradation","text":"Service Capability Level Features Available Features Limited Gemini API Full Complete AI capabilities, image analysis None Ollama High Near-complete AI capabilities Some specialized models, slower image processing Transformers Medium Basic Q&amp;A, text completion Complex reasoning, image processing Client-side Minimal Scripted responses only All AI capabilities"},{"location":"service-availability/fallback-mechanisms/#86-user-experience-during-fallback","title":"8.6 User Experience During Fallback","text":"Fallback Scenario User Notification Experience Impact Gemini \u2192 Ollama \"Using alternative AI service\" Minimal impact, slight latency increase Ollama \u2192 Transformers \"Using simplified model\" Noticeable capability reduction Server \u2192 Client \"Using simplified mode temporarily\" Severely limited capabilities Temporary Outage Loading indicator, retry message Brief delay before fallback activates"},{"location":"service-availability/fallback-mechanisms/#87-recovery-mechanisms","title":"8.7 Recovery Mechanisms","text":"Recovery Type Detection Implementation User Experience Automatic Periodic health checks Service switching when preferred service returns Seamless transition to better service Semi-Automatic Service status monitoring Manual approval of service transition Brief service interruption Manual Administrator intervention Configuration update and service restart Temporary unavailability during restart"},{"location":"service-availability/fallback-mechanisms/#88-fallback-testing","title":"8.8 Fallback Testing","text":"Test Type Frequency Methodology Success Criteria Controlled Outage Weekly Simulate API unavailability Successful transition to fallback within 2s Rate Limit Test Monthly Generate high request volume Preemptive fallback before limit reached Complete Failure Quarterly Simulate all service unavailability Client-side fallback activated within 10s Recovery Test Monthly Restore services after simulated outage Return to primary service within 30s"},{"location":"service-availability/log-alerts/","title":"7. Logging and Alerts","text":""},{"location":"service-availability/log-alerts/#71-logging-strategy","title":"7.1 Logging Strategy","text":"Log Category Purpose Implementation Retention Service Status Track service availability changes Structured JSON logs 30 days Rate Limit Monitor API usage against quotas Counter logs with timestamps 90 days Error Events Record service failures and exceptions Exception details with stack traces 14 days Recovery Actions Document automatic recovery attempts Action logs with outcomes 14 days Performance Metrics Track response times and latency Time-series metrics 180 days"},{"location":"service-availability/log-alerts/#72-log-levels","title":"7.2 Log Levels","text":"Level Usage Example DEBUG Detailed diagnostic information \"Checking Gemini API availability\" INFO Normal operational events \"Service status changed: Gemini API now AVAILABLE\" WARNING Non-critical issues \"Approaching rate limit (85% used)\" ERROR Runtime errors, failed operations \"Connection to Ollama failed: Connection refused\" CRITICAL System-wide failures \"All services unavailable, switching to offline mode\""},{"location":"service-availability/log-alerts/#73-logging-implementation","title":"7.3 Logging Implementation","text":"<pre><code>import logging\nimport json\nfrom datetime import datetime\n\n# Configure logger\nlogger = logging.getLogger(\"service_availability\")\nlogger.setLevel(logging.INFO)\n\n# File handler\nfile_handler = logging.FileHandler(\"service_availability.log\")\nfile_handler.setFormatter(logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s'))\nlogger.addHandler(file_handler)\n\n\nclass ServiceLogger:\n    @staticmethod\n    def log_status_change(service_name, old_status, new_status, reason=None):\n        \"\"\"Log a service status change with structured data\"\"\"\n        log_data = {\n            \"event_type\": \"status_change\",\n            \"timestamp\": datetime.now().isoformat(),\n            \"service\": service_name,\n            \"old_status\": old_status,\n            \"new_status\": new_status,\n            \"reason\": reason\n        }\n        logger.info(f\"Service status changed: {service_name} now {new_status}\", extra={\"data\": json.dumps(log_data)})\n\n        # Critical service unavailability triggers higher level log\n        if new_status == \"UNAVAILABLE\" and service_name in [\"Gemini API\", \"Ollama\"]:\n            logger.warning(f\"Critical service {service_name} is now unavailable. Reason: {reason}\")\n\n    @staticmethod\n    def log_rate_limit(service_name, limit_type, current_usage, total_limit):\n        \"\"\"Log rate limit information\"\"\"\n        usage_percent = (current_usage / total_limit) * 100\n        log_level = logging.INFO\n\n        if usage_percent &gt; 95:\n            log_level = logging.ERROR\n        elif usage_percent &gt; 80:\n            log_level = logging.WARNING\n\n        log_data = {\n            \"event_type\": \"rate_limit\",\n            \"service\": service_name,\n            \"limit_type\": limit_type,\n            \"usage\": current_usage,\n            \"limit\": total_limit,\n            \"percent\": usage_percent\n        }\n\n        logger.log(log_level,\n                   f\"{service_name} {limit_type} usage: {usage_percent:.1f}% ({current_usage}/{total_limit})\",\n                   extra={\"data\": json.dumps(log_data)})\n</code></pre>"},{"location":"service-availability/log-alerts/#74-alert-triggers","title":"7.4 Alert Triggers","text":"Trigger Condition Severity Response Time Service Unavailable Any primary service becomes unavailable High Immediate Rate Limit Threshold &gt;95% of minute or daily quota consumed Medium &lt; 5 minutes Recovery Failure 3+ consecutive failed recovery attempts High Immediate Multiple Failovers &gt;5 failovers in 24 hours Medium &lt; 1 hour All Services Down No available AI services Critical Immediate"},{"location":"service-availability/log-alerts/#75-notification-channels","title":"7.5 Notification Channels","text":"Channel Target Audience Alert Types Implementation Application Logs Developers All events Structured logging with context Email Alerts Operations Team High &amp; Critical events SMTP integration UI Notifications End Users Service degradation Browser notifications via frontend Status Dashboard All stakeholders Service status, outages Real-time web dashboard Slack Channel Operations &amp; Development Medium+ severity Webhook integration"},{"location":"service-availability/log-alerts/#76-alert-templates","title":"7.6 Alert Templates","text":"Alert Type Template Channel Service Down \"[ALERT] {service_name} is DOWN. Reason: {reason}. Failover to {fallback_service} initiated.\" Email, Slack Rate Limit \"[WARNING] {service_name} approaching rate limit: {usage_percent}% of {limit_type} used.\" Logs, Slack Recovery Success \"[INFO] {service_name} successfully recovered after {downtime} minutes of unavailability.\" Logs Client Notification \"Using alternative AI service due to temporary unavailability. Some features may be limited.\" UI"},{"location":"service-availability/log-alerts/#77-log-analysis","title":"7.7 Log Analysis","text":"Analysis Type Purpose Tools Frequency Availability Reporting Calculate uptime percentages Custom scripts Daily Error Pattern Detection Identify recurring issues Log parsing Weekly Rate Limit Forecasting Predict quota exhaustion Time-series analysis Hourly Service Quality Metrics Track performance degradation Dashboards Real-time Audit Trail Security and compliance review Log archiving Monthly"},{"location":"service-availability/processing-diagrams/","title":"10. Diagrams and Visuals","text":""},{"location":"service-availability/processing-diagrams/#101-system-architecture-diagram","title":"10.1 System Architecture Diagram","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                       Client Application                     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                \u2502\n                                \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                      Service Router                          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502                     \u2502                    \u2502\n        \u25bc                     \u25bc                    \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Gemini API   \u2502    \u2502     Ollama    \u2502    \u2502  Transformers \u2502\n\u2502  (External)    \u2502    \u2502  (Local API)  \u2502    \u2502 (Local Lib)   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502                     \u2502                    \u2502\n        \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                              \u2502\n                              \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                Availability Monitoring System                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"service-availability/processing-diagrams/#102-service-monitoring-flowchart","title":"10.2 Service Monitoring Flowchart","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Start      \u2502                 \u2502 Check Interval \u2502\n\u2502 Application \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502   Reached?     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                         \u2502\n                                         \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Update    \u2502                 \u2502 Check Service  \u2502\n\u2502   Cache     \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524 Availability   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2502\n      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Status     \u2502     Yes         \u2502 Status         \u2502\n\u2502  Changed?   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Change Event   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2502                                  \u2502\n      \u2502 No                               \u25bc\n      \u2502                         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n      \u2502                         \u2502 Update Logs &amp;  \u2502\n      \u2502                         \u2502 Send Alerts    \u2502\n      \u2502                         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Wait for    \u2502\n\u2502 Next Check  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"service-availability/processing-diagrams/#103-failover-process-diagram","title":"10.3 Failover Process Diagram","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Request       \u2502         \u2502 Service        \u2502         \u2502 Service       \u2502\n\u2502 Received      \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Available?     \u251c\u2500Yes\u2500\u2500\u2500\u2500\u25ba\u2502 Rate-Limited? \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                  \u2502                          \u2502\n                                  \u2502 No                       \u2502 No\n                                  \u25bc                          \u25bc\n                          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                          \u2502 Try Next      \u2502         \u2502 Process with  \u2502\n                          \u2502 Service       \u2502         \u2502 Primary Service\u2502\n                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                  \u2502\n                                  \u2502\n                                  \u25bc\n                          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                          \u2502 Any Service   \u2502         \u2502 Return Error  \u2502\n                          \u2502 Available?    \u251c\u2500No\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Use Client    \u2502\n                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502 Fallback      \u2502\n                                  \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                  \u2502 Yes\n                                  \u25bc\n                          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                          \u2502 Process with  \u2502\n                          \u2502 Available     \u2502\n                          \u2502 Service       \u2502\n                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"service-availability/processing-diagrams/#104-rate-limit-monitoring-diagram","title":"10.4 Rate Limit Monitoring Diagram","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Track API     \u2502         \u2502 Reset         \u2502\n\u2502 Request       \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Period        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502 Elapsed?      \u2502\n        \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502                         \u2502\n        \u2502                         \u2502 Yes\n        \u2502                         \u25bc\n        \u2502                 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n        \u2502                 \u2502 Reset         \u2502\n        \u2502                 \u2502 Counters      \u2502\n        \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502                         \u2502\n        \u25bc                         \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                 \u2502\n\u2502 Increment     \u2502\u25c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502 Counters      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502\n        \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Approaching   \u2502         \u2502 Log Warning    \u2502\n\u2502 Limit?        \u251c\u2500Yes\u2500\u2500\u2500\u2500\u25ba\u2502 Prepare       \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502 Fallback      \u2502\n        \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502 No\n        \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Continue      \u2502\n\u2502 Normal        \u2502\n\u2502 Operation     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"service-availability/processing-diagrams/#105-recovery-detection-process","title":"10.5 Recovery Detection Process","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Service       \u2502         \u2502 Periodic      \u2502\n\u2502 Unavailable   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Health        \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502 Check         \u2502\n                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                  \u2502\n                                  \u25bc\n                          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                          \u2502 Service       \u2502         \u2502 Continue      \u2502\n                          \u2502 Recovered?    \u251c\u2500No\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Using         \u2502\n                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502 Fallback      \u2502\n                                  \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                  \u2502 Yes\n                                  \u25bc\n                          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                          \u2502 Log Recovery  \u2502\n                          \u2502 Update Status \u2502\n                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                  \u2502\n                                  \u25bc\n                          \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                          \u2502 Resume Using  \u2502\n                          \u2502 Preferred     \u2502\n                          \u2502 Service       \u2502\n                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"service-availability/processing-diagrams/#106-user-experience-flow","title":"10.6 User Experience Flow","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 User          \u2502         \u2502 Frontend      \u2502         \u2502 API Request   \u2502\n\u2502 Submits       \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Processes     \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 to Server     \u2502\n\u2502 Query         \u2502         \u2502 Input         \u2502         \u2502               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                                                            \u2502\n        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502\n        \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Server        \u2502    No   \u2502 Client-side   \u2502         \u2502 Show Error    \u2502\n\u2502 Available?    \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Fallback      \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 Message with  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2502 Activated     \u2502         \u2502 Limited Mode  \u2502\n        \u2502                 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502 Yes\n        \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Service       \u2502         \u2502 Notify User   \u2502\n\u2502 Using         \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25ba\u2502 of Service    \u2502\n\u2502 Fallback?     \u2502   Yes   \u2502 Limitations   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518         \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n        \u2502\n        \u2502 No\n        \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Normal        \u2502\n\u2502 Response      \u2502\n\u2502 Processing    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"service-availability/quality-requirements/","title":"2. Quality Requirements","text":""},{"location":"service-availability/quality-requirements/#21-availability-requirements","title":"2.1 Availability Requirements","text":"Service Uptime Target Measurement Period Critical Hours Opossum Search Application 99.5% Monthly 24/7 Gemini API 98% Monthly Business hours Ollama Service 95% Weekly Business hours Transformers Fallback 99.9% Monthly 24/7"},{"location":"service-availability/quality-requirements/#22-performance-requirements","title":"2.2 Performance Requirements","text":"Metric Target Description Service Check Response Time &lt; 500ms Maximum time for a single service availability check Failover Detection Time &lt; 2s Time to detect a service failure and initiate failover Failover Completion Time &lt; 5s Time to complete transition to alternative service Service Status Cache Validity 30s Maximum age of cached service status information"},{"location":"service-availability/quality-requirements/#23-recovery-time-objectives","title":"2.3 Recovery Time Objectives","text":"Scenario Recovery Time Objective (RTO) Recovery Point Objective (RPO) Gemini API Unavailable Immediate failover to Ollama No data loss Ollama Service Failure &lt; 1 minute for auto-restart, immediate failover to Transformers No data loss All Remote Services Down &lt; 10 seconds to activate offline mode Potential loss of latest model updates"},{"location":"service-availability/quality-requirements/#24-logging-and-monitoring-requirements","title":"2.4 Logging and Monitoring Requirements","text":"Requirement Description Status Change Logging All service status changes must be logged with timestamp and reason Rate Limit Tracking Gemini API usage must be tracked with 99.99% accuracy Critical Alerts Service outages must trigger alerts within 30 seconds Availability Reports System must generate daily availability reports"},{"location":"service-availability/quality-requirements/#25-quality-verification","title":"2.5 Quality Verification","text":"Verification Method Frequency Responsibility Availability Tests Daily automated tests CI/CD Pipeline Failover Tests Weekly Development Team Recovery Procedure Tests Monthly Operations Team Load Testing Quarterly QA Team"},{"location":"service-availability/rate-limiting-throttling/","title":"6. Rate Limiting and Throttling","text":""},{"location":"service-availability/rate-limiting-throttling/#61-rate-limit-policies","title":"6.1 Rate Limit Policies","text":"Service Rate Limit Type Quota Reset Period Priority Handling Gemini API API Calls 60 per minute Minute High-value queries prioritized Gemini API Daily Usage 60,000 per day 24 hours Resource allocation based on time of day Ollama Local Resource CPU/GPU dependent N/A Queue-based with timeout Transformers Local Resource Memory/CPU dependent N/A Simplified models for high load"},{"location":"service-availability/rate-limiting-throttling/#62-detection-mechanisms","title":"6.2 Detection Mechanisms","text":"Limit Type Detection Method Response Code Handling Strategy Pre-emptive Counter tracking N/A Redirect before limit reached Reactive HTTP 429 response 429 Too Many Requests Immediate failover to alternative service Quota Exceeded HTTP 403 response 403 Forbidden Temporary service downgrade Resource Exhaustion Exception/timeout Various Scale down model complexity"},{"location":"service-availability/rate-limiting-throttling/#63-request-management","title":"6.3 Request Management","text":"Approach Implementation Benefit Request Queuing In-memory FIFO queue with priority Prevents request loss during high load Request Coalescing Combine similar requests Reduces total API calls Request Prioritization User interaction &gt; Background tasks Maintains responsive UX Adaptive TTL Dynamic cache lifetime based on load Reduces API calls during peak"},{"location":"service-availability/rate-limiting-throttling/#64-throttling-implementation","title":"6.4 Throttling Implementation","text":"<pre><code>class RateLimitManager:\n    def __init__(self):\n        self.minute_usage = 0\n        self.daily_usage = 0\n        self.last_minute_reset = datetime.now()\n        self.last_daily_reset = datetime.now()\n        self.request_queue = asyncio.Queue()\n\n    async def track_request(self):\n        \"\"\"Track a new request against rate limits\"\"\"\n        current_time = datetime.now()\n\n        # Reset counters if needed\n        if (current_time - self.last_minute_reset).seconds &gt;= 60:\n            self.minute_usage = 0\n            self.last_minute_reset = current_time\n\n        if (current_time - self.last_daily_reset).days &gt;= 1:\n            self.daily_usage = 0\n            self.last_daily_reset = current_time\n\n        # Increment counters\n        self.minute_usage += 1\n        self.daily_usage += 1\n\n    async def can_process_request(self):\n        \"\"\"Check if request can be processed within rate limits\"\"\"\n        return self.minute_usage &lt; 58  # Buffer of 2 requests\n\n    async def process_or_queue(self, request_func, *args):\n        \"\"\"Process request or queue it based on rate limits\"\"\"\n        if await self.can_process_request():\n            await self.track_request()\n            return await request_func(*args)\n        else:\n            # Queue the request or fail over\n            return await self.handle_rate_limit(*args)\n</code></pre>"},{"location":"service-availability/rate-limiting-throttling/#65-client-side-adaptation","title":"6.5 Client-Side Adaptation","text":"Condition Client Behavior User Experience Server Rate Limited Switch to fallback simulation \"Using simplified mode temporarily\" Approaching Limits Batch requests Normal with slight delay Normal Operation Direct API access Full functionality Extended Outage Local-only operation Reduced capabilities with notification"},{"location":"service-availability/rate-limiting-throttling/#66-balance-and-optimization-strategies","title":"6.6 Balance and Optimization Strategies","text":"Strategy Implementation Effect Time-of-day Allocation Reserve quota for peak hours Consistent availability during business hours Request Complexity Analysis Measure token count before sending Route complex queries to appropriate backend Adaptive Backoff Exponential delay with jitter Graceful recovery during service degradation Quota Forecasting Predictive usage modeling Proactive service switching before limits reached"},{"location":"service-availability/rate-limiting-throttling/#67-monitoring-and-alerts","title":"6.7 Monitoring and Alerts","text":"Metric Threshold Alert Type Recipient Minute Usage &gt;80% of limit Warning Logs Minute Usage &gt;95% of limit Critical Operations Team Daily Usage &gt;90% of limit Warning Operations Team Queue Size &gt;20 requests Warning Logs Queue Size &gt;50 requests Critical Operations Team Queue Wait Time &gt;5 seconds Warning Logs, User Notification"},{"location":"service-availability/service-outage/","title":"5. Error Handling and Recovery","text":""},{"location":"service-availability/service-outage/#51-error-detection-and-classification","title":"5.1 Error Detection and Classification","text":"Error Type Detection Method Priority Example API Connection Failure Request timeout or HTTP error High Gemini API unreachable Rate Limit Reached HTTP 429 or quota tracking High Gemini API quota exceeded Authentication Failure HTTP 401/403 response High Invalid or expired API key Local Service Unreachable Socket connection failure Medium Ollama service not running Model Loading Failure Exception during model initialization Medium Insufficient resources for Transformers Slow Response Response time exceeding threshold Low Degraded performance warning"},{"location":"service-availability/service-outage/#52-failover-strategy","title":"5.2 Failover Strategy","text":"From Service To Service Trigger Transition Time Gemini API \u2192 Ollama Connection failure, rate limit, or auth error Immediate &lt; 2s Ollama \u2192 Transformers Connection failure or initialization error Immediate &lt; 5s Any \u2192 Client-side Fallback All server services unavailable After 3 retries &lt; 10s"},{"location":"service-availability/service-outage/#53-recovery-procedures","title":"5.3 Recovery Procedures","text":"Service Automatic Recovery Manual Recovery Steps Gemini API Periodic availability checks to detect when service is restored 1. Verify API key validity2. Check quota status3. Test connectivity to API endpoint4. Update API configuration if needed Ollama Restart attempt after 60s of unavailability 1. Check local service process2. Restart Ollama service3. Verify model availability4. Check GPU utilization if performance issues Transformers Model reloading attempt if initialization fails 1. Verify model files exist2. Check available RAM3. Consider loading smaller model variant4. Update model files if corrupted"},{"location":"service-availability/service-outage/#54-error-communication","title":"5.4 Error Communication","text":"Audience Error Information Delivery Method End Users General error with degraded capability notice UI message: \"Using alternative model due to service availability\" Developers Detailed error including exception trace and service status Application logs with ERROR level Operations Service status changes and recovery attempts Logs and monitoring alerts"},{"location":"service-availability/service-outage/#55-resilience-mechanisms","title":"5.5 Resilience Mechanisms","text":"Mechanism Purpose Implementation Circuit Breaker Prevent repeated calls to failing services Exponential backoff with jitter Request Caching Serve previous responses during outages In-memory cache with TTL Client-side Fallback Provide degraded functionality when server is unavailable JavaScript simulation mode in UI Service Prioritization Route requests to highest capability available service Service ranking with availability checks Graceful Degradation Maintain core functionality with limited capabilities Feature flags based on available services"},{"location":"service-availability/service-outage/#56-recovery-monitoring","title":"5.6 Recovery Monitoring","text":"Recovery Metric Measurement Threshold Action Recovery Time Time from failure to service restoration &gt; RTO Alert operations team Failed Recovery Attempts Count of unsuccessful recovery attempts &gt; 3 Escalate to manual intervention Failover Frequency Number of failovers in 24h period &gt; 5 Investigate root cause Performance After Recovery Response time compared to baseline &gt; 150% of baseline Flag for optimization"},{"location":"service-availability/testing-validation/","title":"9. Testing and Validation - Service Availability","text":""},{"location":"service-availability/testing-validation/#91-testing-strategy","title":"9.1 Testing Strategy","text":"Test Type Purpose Frequency Implementation Unit Tests Verify individual components function correctly Per commit Pytest for Python components Integration Tests Verify service interaction and failover logic Daily Automated test suite with service mocks End-to-End Tests Verify complete system behavior Weekly Real-world scenarios with actual services Chaos Tests Verify resilience during unexpected failures Monthly Random service disruption testing Load Tests Verify behavior under high throughput Quarterly Simulated high volume request patterns"},{"location":"service-availability/testing-validation/#92-test-scenarios","title":"9.2 Test Scenarios","text":"Scenario Test Case Validation Criteria Gemini Unavailability Simulate API timeout Successful failover to Ollama within 2s Rate Limit Exceeded Generate high request volume Preemptive failover before 429 error Authentication Failure Use invalid API key Correct error handling and failover Intermittent Failures Random request failures Circuit breaker activation after threshold Slow Response Delayed API responses Timeout detection and service degradation Recovery Detection Restore service after outage Return to primary service within check interval"},{"location":"service-availability/testing-validation/#93-validation-methods","title":"9.3 Validation Methods","text":"Method Description Tools Metrics Availability Metrics Measure uptime percentage Custom metrics collector 99.5% target uptime Failover Success Rate Measure successful transitions Test harness logs &gt;99% success target Response Time Validation Measure end-to-end latency Request timing &lt;5s during failover User Experience Assessment Evaluate quality of fallback responses Subjective scoring Minimal degradation Recovery Time Validation Measure time to restore optimal service Test harness logs Within RTO targets"},{"location":"service-availability/testing-validation/#94-testing-infrastructure","title":"9.4 Testing Infrastructure","text":"Component Purpose Implementation Mock Services Simulate API responses and failures Pytest fixtures and mock HTTP servers Rate Limit Simulator Test behavior near quota limits Counter manipulation and response code injection Network Condition Simulator Test with varied connectivity Proxy with configurable delays and failures Test Harness Coordinate and execute test suites Pytest with custom plugins CI/CD Integration Automate testing on changes GitHub Actions workflows"},{"location":"service-availability/testing-validation/#95-testing-implementation","title":"9.5 Testing Implementation","text":"<pre><code># Example test case for failover behavior\nimport pytest\nimport asyncio\nfrom unittest.mock import patch, MagicMock\n\nclass TestServiceFailover:\n    @pytest.mark.asyncio\n    async def test_gemini_to_ollama_failover(self, availability_manager, service_router):\n        # Arrange - Mock Gemini as unavailable\n        with patch.object(availability_manager, 'get_available_services') as mock_get:\n            mock_get.return_value = {\"ollama\", \"transformers\"}  # Gemini not available\n\n            # Act - Attempt to route a request\n            result = await service_router.route_request({\"query\": \"test question\"})\n\n            # Assert - Request was handled by Ollama\n            assert result[\"fallback_used\"] == \"ollama\"\n            assert \"response\" in result\n</code></pre>"},{"location":"service-availability/testing-validation/#96-validation-dashboard","title":"9.6 Validation Dashboard","text":"Metric Visualization Threshold Alerts Service Uptime Time-series graph &lt;99.5% Email to operations Failover Events Count and distribution &gt;5 per day Slack notification Average Response Time Time-series by service &gt;2s baseline Warning in dashboard Error Rate Percentage by service &gt;1% Critical alert Fallback Distribution Pie chart of service usage &gt;20% non-primary Weekly report"},{"location":"service-availability/testing-validation/#97-continuous-testing","title":"9.7 Continuous Testing","text":"Practice Implementation Frequency Responsible Team Automated Test Suite Full test coverage in CI pipeline Every PR Development Synthetic Monitoring Regular health checks from external locations Every 5 minutes Operations Regression Testing Verify fixed issues don't recur Every release QA Scheduled Chaos Tests Planned service disruptions Weekly off-hours SRE User Journey Tests End-to-end experience validation Bi-weekly QA"}]}